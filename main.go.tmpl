{{- define "main" -}}

{{- /* Options with default values. */ -}}
{{- $opts := dict -}}
{{- set $opts "pkg" (default .Opts.pkg "proto") -}}
{{- set $opts "client" (ternary (in .Opts.client "" "true") true false) -}}
{{- set $opts "server" (ternary (in .Opts.server "" "true") true false) -}}

{{- /* Print help on -help. */ -}}
{{- if exists .Opts "help" -}}
  {{- template "help" $opts -}}
  {{- exit 0 -}}
{{- end -}}

{{- /* Print help on unsupported option. */ -}}
{{- range $k, $v := .Opts }}
  {{- if not (exists $opts $k) -}}
    {{- stderrPrintf "-%v=%q is not supported target option\n\nUsage:\n" $k $v -}}
    {{- template "help" $opts -}}
    {{- exit 1 -}}
  {{- end -}}
{{- end -}}

{{- if ne .WebrpcVersion "v1" -}}
  {{- stderrPrintf "%s generator error: unsupported webrpc version %s\n" .WebrpcTarget .WebrpcVersion -}}
  {{- exit 1 -}}
{{- end -}}

{{- if not (minVersion .WebrpcGenVersion "v0.8.0") -}}
  {{- stderrPrintf "%s generator error: unsupported webrpc-gen version %s, please update\n" .WebrpcTarget .WebrpcGenVersion -}}
  {{- exit 1 -}}
{{- end -}}

{{- /* Map webrpc data types to Go. */ -}}
{{- $typeMap := dict }}
{{- set $typeMap "null" "struct{}" -}}
{{- set $typeMap "any" "interface{}" -}}
{{- set $typeMap "byte" "byte" -}}
{{- set $typeMap "bool" "bool" -}}
{{- set $typeMap "uint" "uint" -}}
{{- set $typeMap "uint8" "uint8" -}}
{{- set $typeMap "uint16" "uint16" -}}
{{- set $typeMap "uint32" "uint32" -}}
{{- set $typeMap "uint64" "uint64" -}}
{{- set $typeMap "int" "int" -}}
{{- set $typeMap "int8" "int8" -}}
{{- set $typeMap "int16" "int16" -}}
{{- set $typeMap "int32" "int32" -}}
{{- set $typeMap "int64" "int64" -}}
{{- set $typeMap "float32" "float32" -}}
{{- set $typeMap "float64" "float64" -}}
{{- set $typeMap "string" "string" -}}
{{- set $typeMap "timestamp" "time.Time" -}}

// {{.SchemaName}} {{.SchemaVersion}} {{.SchemaHash}}
// --
// Code generated by webrpc-gen@{{.WebrpcGenVersion}} with {{.WebrpcTarget}} generator. DO NOT EDIT.
//
// {{.WebrpcGenCommand}}
package {{get $opts "pkg"}}

import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"
	"io/ioutil"
	"net/http"
	"strings"
	"time"
)

// WebRPC description and code-gen version
func WebRPCVersion() string {
	return "{{.WebrpcVersion}}"
}

// Schema version of your RIDL schema
func WebRPCSchemaVersion() string {
	return "{{.SchemaVersion}}"
}

// Schema hash generated from your RIDL schema
func WebRPCSchemaHash() string {
	return "{{.SchemaHash}}"
}

{{ template "types" dict "Services" .Services "Messages" .Messages "TypeMap" $typeMap }}

{{- if $opts.server}}
{{ template "server" dict "Services" .Services "TypeMap" $typeMap }}
{{ end -}}

{{- if $opts.client }}
{{ template "client" dict "Services" .Services "TypeMap" $typeMap }}
{{ end -}}

{{ template "helpers" . }}
{{ end }}
