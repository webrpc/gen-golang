{{- define "struct" -}}
{{- $struct := .Struct -}}
{{- $typeMap := .TypeMap -}}

type {{$struct.Name}} struct {
{{- range $_, $field := $struct.Fields -}}
	{{- $fieldName := $field.Name | firstLetterToUpper -}}
	{{- $customType := "" -}}
	{{- $jsonTags := printf "json:%q" $field.Name }}
	{{- $dbTags := "" }}
	{{- range $meta := $field.Meta -}}
		{{- if exists $meta "go.field.name" -}}
			{{- $fieldName = get $meta "go.field.name" -}}
		{{- end -}}
		{{- if exists $meta "go.field.type" -}}
			{{- $customType = get $meta "go.field.type" -}}
		{{- end -}}
		{{- if exists $meta "json" -}}
			{{- $jsonTags = printf "json:%q" (get $meta "json") -}}
		{{- end -}}
		{{- if exists $meta "go.tag.json" -}}
			{{- $jsonTags = printf "json:%q" (get $meta "go.tag.json") -}}
		{{- end -}}
		{{- if exists $meta "go.tag.db" -}}
			{{- $dbTags = printf " db:%q" (get $meta "go.tag.db") -}}
		{{- end -}}
	{{- end }}
	{{$fieldName}} {{if ne $customType ""}}{{$customType}}{{else}}{{template "type" dict "Type" $field.Type "Optional" $field.Optional "TypeMap" $typeMap}}{{end}} `{{$jsonTags}}{{$dbTags}}`
{{- end}}
}
{{- end }}
